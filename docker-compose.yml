version: '3.5'
services:
  plex:
    container_name: plex
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    image: plexinc/pms-docker:latest
    hostname: Artemis
    environment:
      - TZ=Europe/Paris
      - PLEX_CLAIM=${PLEX_CLAIM}
      - ADVERTISE_IP=${PLEX_ADVERTISE_IP}
      - NVIDIA_VISIBLE_DEVICES=all
    ports:
      - 32400:32400/tcp
      - 3005:3005/tcp
      - 8324:8324/tcp
      - 32469:32469/tcp
      - 1900:1900/udp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    volumes:
      - /tmp:/transcode
      - ${CONFIG_DIR}/plex:/config
      - ${MEDIA_DIR}/Shows:/data/shows
      - ${MEDIA_DIR}/Movies:/data/movies
      - ${MEDIA_DIR}/Anime:/data/anime
    restart: unless-stopped

  tautulli:
    container_name: tautulli
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    image: linuxserver/tautulli
    links:
      - plex
    environment:
      - TZ=Europe/Paris
      - PGID=0
      - PUID=0
    volumes:
      - ${CONFIG_DIR}/tautulli:/config
      - ${BASE_DIR}/tautulli/logs:/logs:ro
    restart: unless-stopped


  wireguard-azire:
    container_name: wireguard-azire
    privileged: true
    labels:
      com.centurylinklabs.watchtower.enable: "false"
    build:
      context: ./wireguard-azire
    environment:
      - AZIRE_USERNAME=${AZIRE_USERNAME}
      - AZIRE_PASSWORD=${AZIRE_PASSWORD}
      - AZIRE_LOCATION=${AZIRE_LOCATION}
    volumes:
      - /etc/wireguard:/etc/wireguard
      - /lib/wireguard:/lib/wireguard
      - /lib/modules:/lib/modules
    ports:
      - 5555:5555
      - '51413:51413/tcp'
      - '51413:51413/udp'
    sysctls:
        - net.ipv4.conf.all.rp_filter=2
        - net.ipv6.conf.all.disable_ipv6=0
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    restart: always


  transmission:
    container_name: transmission
    labels:
      com.centurylinklabs.watchtower.enable: "false"
    build:
      context: ./transmission
    environment:
      - PGID=0
      - PUID=0
    volumes:
      - ${DOWNLOADS_DIR}/incomplete:/downloads
      - ${DOWNLOADS_DIR}/completed:/completed
      - ${CONFIG_DIR}/transmission:/config/transmission
    restart: always
    depends_on:
      - wireguard-azire
    network_mode: "service:wireguard-azire"

  sonarr:
    container_name: sonarr
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    image: linuxserver/sonarr:preview
    depends_on:
      - transmission
    links: 
      - jackett
      - plex
    volumes:            
      - ${CONFIG_DIR}/sonarr:/config
      - ${MEDIA_DIR}/Shows:/tv
      - ${MEDIA_DIR}/Anime:/anime
      - ${DOWNLOADS_DIR}/completed:/downloads
    environment:
      - PGID=0
      - PUID=0
      - TZ=Europe/London
    restart: unless-stopped

  radarr:
    container_name: radarr
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    image: linuxserver/radarr
    depends_on:
      - transmission
    links: 
      - jackett
      - plex
    volumes:
      - ${CONFIG_DIR}/radarr:/config
      - ${MEDIA_DIR}/Movies:/movies
      - ${MEDIA_DIR}/Anime:/anime
      - ${DOWNLOADS_DIR}/completed:/downloads
    environment:
      - PGID=0
      - PUID=0
      - TZ=Europe/London
    restart: unless-stopped

  jackett:
    container_name: jackett
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    image: linuxserver/jackett
    environment:
      - PGID=0
      - PUID=0
      - TZ=Europe/London
    volumes:
      - ${CONFIG_DIR}/jackett:/config
      - ${DOWNLOADS_DIR}/jackett:/downloads
    restart: unless-stopped

  bazarr:
    container_name: bazarr
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    image: linuxserver/bazarr
    environment:
      - PGID=0
      - PUID=0
      - TZ=Europe/London
    volumes:
      - ${CONFIG_DIR}/bazarr:/config
      - ${MEDIA_DIR}/Movies:/movies
      - ${MEDIA_DIR}/Anime:/anime
      - ${MEDIA_DIR}/Shows:/tv
      - ${DOWNLOADS_DIR}/bazarr:/downloads
    links:
      - sonarr
      - radarr
    deploy:
      resources:
        limits:
          cpus: '0.2'
    restart: unless-stopped

  portainer:
    container_name: portainer
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    image: portainer/portainer
    command: -H unix:///var/run/docker.sock --no-auth
    volumes:
      - ${CONFIG_DIR}/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  lazylibrarian:
    container_name: lazylibrarian
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    image: linuxserver/lazylibrarian
    depends_on:
      - transmission
    environment:
      - PGID=0
      - PUID=0
      - TZ=Europe/London
    links: 
      - jackett
      - plex
      - calibre
    volumes:
      - ${CONFIG_DIR}/lazylibrarian:/config
      - ${MEDIA_DIR}/Books:/books
      - ${MEDIA_DIR}/Calibre:/Calibre
      - ${DOWNLOADS_DIR}/completed:/downloads
    restart: unless-stopped

  calibre:
    container_name: calibre
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    image: aptalca/docker-rdp-calibre
    environment:
      - PGID=0
      - PUID=0
      - EDGE=0
      - WIDTH=1280
      - HEIGHT=720
      - LIBRARYINTERNALPATH=/Calibre
      - TZ=Europe/London
    links: 
      - jackett
    volumes:
      - ${CONFIG_DIR}/calibre:/config
      - ${MEDIA_DIR}/Books:/books
      - ${MEDIA_DIR}/Calibre:/Calibre
    restart: unless-stopped

  organizr:
    container_name: organizr
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    image: tronyx/docker-organizr-v2
    restart: unless-stopped
    volumes:
        - ${CONFIG_DIR}/organizr:/config
    links:
      - admin
      - download
      - wireguard-azire
      - jackett
      - portainer
      - sonarr
      - radarr
      - plex
      - bazarr
      - lazylibrarian
    environment:
      - TZ=Europe/London

  ftpd:
    container_name: ftpd
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    image: stilliard/pure-ftpd:hardened
    restart: unless-stopped
    ports:
      - "21:21"
      - "30000-30009:30000-30009"
    volumes:
      - "${INTERNAL_DIR}/ftpd:/home/user"
    environment:
      PUBLICHOST: thenairn.com
      FTP_USER_NAME: ${FTP_USER_NAME}
      FTP_USER_PASS: ${FTP_USER_PASS}
      FTP_USER_HOME: /home/user

  admin:
    container_name: admin
    labels:
      com.centurylinklabs.watchtower.enable: "false"
    image: filebrowser/filebrowser:v1.11.0
    command: "--auth.method='none'"
    volumes:
      - ${DOWNLOADS_DIR}:/srv/Downloads
      - ${MEDIA_DIR}:/srv/Media
      - ${INTERNAL_DIR}:/srv/Internal
      - ${CONFIG_DIR}/admin/config.json:/etc/config.json
      - ${CONFIG_DIR}/admin/database.db:/etc/database.db
    restart: unless-stopped

  dwarffortress:
    container_name: dwarffortress
    labels:
      com.centurylinklabs.watchtower.enable: "false"
    image: mifki/dfremote
    volumes:
      - ${CONFIG_DIR}/dwarffortress:/df_linux/data/save
    environment:
      DFREMOTE_PWD: ${DF_PASSWORD}
    ports:
      - "1235:1235/udp"
    restart: unless-stopped

  
  monica:
    container_name: monica
    image: monicahq/monicahq
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    links:
      - monicadb
    environment:
      - APP_KEY=${MONICA_APP_KEY}
      - DB_HOST=monicadb
      - APP_TRUSTED_PROXIES=
      - APP_TRUSTED_CLOUDFLARE=false
      - APP_ENV=production
    volumes:
      - ${CONFIG_DIR}/monica/app:/var/www/monica/storage
    restart: always

  monicadb:
    container_name: monicadb
    image: mysql:5.7
    labels:
      com.centurylinklabs.watchtower.enable: "false"
    environment:
      - MYSQL_ROOT_PASSWORD=${MONICA_DB_ROOT_PW}
      - MYSQL_DATABASE=monica
      - MYSQL_USER=homestead
      - MYSQL_PASSWORD=secret
    volumes:
      - ${CONFIG_DIR}/monica/db:/var/lib/mysql
    restart: always
          
  netdata:
    container_name: netdata
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    restart: always
    hostname: netdata.thenairn.com
    image: netdata/netdata
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - ${CONFIG_DIR}/netdata:/etc/netdata
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment: 
      - DOCKER_USR=root
      - SLACK_WEBHOOK_URL=${NETDATA_SLACK_WEBHOOK_URL}
      - SLACK_CHANNEL=${NETDATA_SLACK_CHANNEL}
      - DEFAULT_RECIPIENT_SLACK=${NETDATA_SLACK_CHANNEL}

  caddy:
    container_name: caddy
    labels:
      com.centurylinklabs.watchtower.enable: "false"
    environment:
      - TRANSMISSION_PASSWORD=${TRANSMISSION_PASSWORD}
    build:
      context: ./caddy
      args:
        plugins: reauth
    links:
      - download
      - admin
      - wireguard-azire
      - jackett
      - portainer
      - sonarr
      - radarr
      - organizr
      - plex
      - tautulli
      - bazarr
      - lazylibrarian
      - calibre
      - monica
      - netdata
    ports:
      - '80:80/tcp'
      - '443:443/tcp'
    volumes:
      - ${CONFIG_DIR}/caddy:/root/.caddy
    restart: unless-stopped

  watchtower:
    container_name: watchtower
    image: v2tec/watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 10800 --label-enable --cleanup
    environment:
      WATCHTOWER_NOTIFICATIONS: slack
      WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL: ${WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL}