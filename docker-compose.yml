version: '3'
services:
  plex:
    image: plexinc/pms-docker:latest
    container_name: plex
    hostname: Hermes
    environment:
      - TZ=Europe/Paris
    network_mode: "host"
    volumes:
      - ${CONFIG_DIR}/plex/config:/config
      - ${BASE_DIR}/plex/transcode:/transcode
      - ${BASE_DIR}/plex/media/Shows:/data/shows
      - ${BASE_DIR}/plex/media/Movies:/data/movies
      - ${BASE_DIR}/plex/media/Anime:/data/anime
      - ${BASE_DIR}/transmission/completed:/data/completed
    restart: unless-stopped

  fileserver:
    build:
      context: fileserver
    volumes:
      - ${BASE_DIR}/transmission:/data
    restart: unless-stopped

  transmission:
    image: linuxserver/transmission
    environment:
      - PGID=0
      - PUID=0
    ports:
      - '51413:51413/tcp'
      - '51413:51413/udp'
    volumes:
      - ${BASE_DIR}/transmission:/downloads
      - ${CONFIG_DIR}/transmission:/config
      - ./transmission/settings.json:/config/settings.json
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    depends_on:
      - transmission
    links: 
      - jackett
    volumes:            
      - ${CONFIG_DIR}/sonarr:/config
      - ${BASE_DIR}/plex/media/Shows:/tv
      - ${BASE_DIR}/plex/media/Anime:/anime
      - ${BASE_DIR}/transmission:/downloads
    environment:
      - PGID=0
      - PUID=0
      - TZ=Europe/London
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    depends_on:
      - transmission
    links: 
      - jackett
    volumes:
      - ${CONFIG_DIR}/radarr:/config
      - ${BASE_DIR}/plex/media/Movies:/movies
      - ${BASE_DIR}/plex/media/Anime:/anime
      - ${BASE_DIR}/transmission:/downloads
    environment:
      - PGID=0
      - PUID=0
      - TZ=Europe/London
    restart: unless-stopped

  jackett:
    image: linuxserver/jackett
    container_name: jackett
    restart: always
    environment:
      - PGID=0
      - PUID=0
      - TZ=Europe/London
    volumes:
      - ${CONFIG_DIR}/jackett:/config
      - ${BASE_DIR}/jackett/downloads:/downloads
    restart: unless-stopped

  portainer:
    image: portainer/portainer
    container_name: portainer
    command: -H unix:///var/run/docker.sock --no-auth
    volumes:
      - ${BASE_DIR}/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  organizr:
    image: tronyx/docker-organizr-v2
    container_name: organizr
    restart: unless-stopped
    volumes:
        - ${CONFIG_DIR}/organizr:/config
    environment:
      - TZ=Europe/London

  ombi:
    container_name: ombi
    image: rogueosb/ombi
    restart: unless-stopped
    environment:
      - TZ=Europe/London
      - PUID=0
      - PGID=0
    volumes:
      - ${CONFIG_DIR}/ombi:/config

  caddy:
    build:
      context: https://github.com/abiosoft/caddy-docker.git
      args:
        plugins: reauth
    links:
      - fileserver
      - transmission
      - jackett
      - portainer
      - sonarr
      - radarr
      - organizr
      - ombi
    ports:
      - '80:80/tcp'
      - '443:443/tcp'
    volumes:
      - ${BASE_DIR}/caddy:/root/.caddy
      - ./Caddyfile:/etc/Caddyfile
    restart: unless-stopped

